name: Release Docker Images

on:
  workflow_dispatch:
  push:
    tags:
      - '*.*.*'  # e.g., 1.0.0

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: telegram-status-updater

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHA_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push ARM64 Docker image
        run: |
          docker buildx build -f Dockerfile \
            --platform linux/arm64 \
            -t ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.version }} \
            --push .

      - name: Get image digest
        id: get_digest
        run: |
          digest=$(docker buildx imagetools inspect ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.version }} \
            --format '{{json .}}' | jq -r '.manifest.digest')
          echo "digest=$digest" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          body: |
            Docker image published to GitHub Container Registry:

            Image: 
            `ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.version }}`

            Digest:
            `${{ steps.get_digest.outputs.digest }}`

          draft: false
          prerelease: false